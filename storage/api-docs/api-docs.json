{
    "openapi": "3.0.0",
    "info": {
        "title": "Hospital-Inventory Information System API",
        "description": "This API enables seamless interaction between hospitals and warehouses to manage and distribute healthcare items in real-time. Hospitals can place orders, warehouses manage inventory, and order statuses are tracked accurately. All endpoints require Bearer token authentication for secure access.",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000"
        }
    ],
    "paths": {
        "/api/register/hospital": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register a new hospital user",
                "operationId": "8f9fe7e0c27f6b42b23e4029d5dba47c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "RS Sehat Sentosa"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "hospital@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "secret123"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "Jl. Merdeka No. 10, Jakarta"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Hospital registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "RS Sehat Sentosa"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "hospital@example.com"
                                                },
                                                "address": {
                                                    "type": "string",
                                                    "example": "Jl. Merdeka No. 10, Jakarta"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-05-20T10:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-05-20T10:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "1|Y9o...v7A"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validasi gagal"
                                        },
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email has already been taken."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Terjadi kesalahan"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "SQLSTATE[23000]: Integrity constraint violation: ..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/login/hospital": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Login hospital user",
                "operationId": "26268b411e15cbf6aac6ede1a3470334",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "hospital@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "secret123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "RS Sehat Sentosa"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "hospital@example.com"
                                                },
                                                "address": {
                                                    "type": "string",
                                                    "example": "Jl. Merdeka No. 10, Jakarta"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-05-20T10:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-05-20T10:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "1|Y9o...v7A"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Kredensial tidak valid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validasi gagal"
                                        },
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email field is required."
                                                    }
                                                },
                                                "password": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The password field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Terjadi kesalahan pada server"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "SQLSTATE[23000]: Integrity constraint violation..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Logout user",
                "operationId": "79854151e609bd20032aa5aa4d5a35c0",
                "responses": {
                    "200": {
                        "description": "Logout berhasil",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Logout berhasil"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Tidak terautentikasi",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Tidak terautentikasi"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Terjadi kesalahan pada server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Terjadi kesalahan pada server"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/register/warehouse": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register a new warehouse user",
                "operationId": "df979f9996e8cfe4b7d1a9f5f6bdcf47",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Gudang Sejahtera"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "warehouse@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "rahasia123"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "Jl. Industri No. 123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful registration",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Gudang Sejahtera"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "warehouse@example.com"
                                                },
                                                "address": {
                                                    "type": "string",
                                                    "example": "Jl. Industri No. 123"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-05-20T10:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-05-20T10:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "1|xYZ...token_string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validasi gagal"
                                        },
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email has already been taken."
                                                    }
                                                },
                                                "password": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The password must be at least 6 characters."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Terjadi kesalahan"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "SQLSTATE[23000]: Integrity constraint violation..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/login/warehouse": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Login warehouse user",
                "operationId": "d5bdb761a5f7650dfd98b6cc45c8f552",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "warehouse@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "rahasia123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Gudang Satu"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "warehouse@example.com"
                                                },
                                                "address": {
                                                    "type": "string",
                                                    "example": "Jl. Industri No. 1, Bandung"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-05-20T10:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-05-20T10:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "1|Xyz...123"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Kredensial tidak valid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validasi gagal"
                                        },
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email field is required."
                                                    }
                                                },
                                                "password": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The password field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Terjadi kesalahan pada server"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "SQLSTATE[23000]: Integrity constraint violation..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/hospitals": {
            "get": {
                "tags": [
                    "Hospitals"
                ],
                "summary": "Get all hospitals",
                "operationId": "b53f6d753d5e288a546ef8ae1bbe419e",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Hospital"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Failed to fetch hospitals"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/hospitals/{id}": {
            "get": {
                "tags": [
                    "Hospitals"
                ],
                "summary": "Get a hospital by ID",
                "operationId": "ac8c2fc71aa402bae314d4a65a72fcb2",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the hospital",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Hospital"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Hospital not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Hospital not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Failed to fetch hospital"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Hospitals"
                ],
                "summary": "Update hospital data",
                "operationId": "dfa4ad209e65d3c4707bcf85d440a6aa",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Hospital ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "address": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Hospital updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Hospital"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Hospital not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Hospital not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Hospitals"
                ],
                "summary": "Delete a hospital by ID",
                "operationId": "3564d800a611c432a17711f6861f6eed",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Hospital ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Hospital deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Hospital deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Hospital not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Hospital not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/items": {
            "get": {
                "tags": [
                    "Items"
                ],
                "summary": "Get all items and Get by category",
                "description": "Returns a list of items, optionally filtered by category",
                "operationId": "53e44209d7fe56acf154d9c0d47e5069",
                "parameters": [
                    {
                        "name": "kategori",
                        "in": "query",
                        "description": "Filter items by kategori",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "AlatBantu",
                                "Furniture",
                                "Monitoring",
                                "Sterilisasi",
                                "Bedah",
                                "Laboratorium",
                                "ProteksiDiri",
                                "Lainnya"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Item"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to fetch items"
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Items"
                ],
                "summary": "Create a new item",
                "operationId": "371ad8f4244d53c482a14de9004905a4",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description",
                                    "stock",
                                    "kategori",
                                    "warehouse_id"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Alat Ukur Tekanan"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Digunakan untuk mengukur tekanan darah"
                                    },
                                    "stock": {
                                        "type": "integer",
                                        "example": 10
                                    },
                                    "kategori": {
                                        "type": "string",
                                        "enum": [
                                            "AlatBantu",
                                            "Furniture",
                                            "Monitoring",
                                            "Sterilisasi",
                                            "Bedah",
                                            "Laboratorium",
                                            "ProteksiDiri",
                                            "Lainnya"
                                        ],
                                        "example": "Monitoring"
                                    },
                                    "warehouse_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Item created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Item"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/items/{id}": {
            "get": {
                "tags": [
                    "Items"
                ],
                "summary": "Get item by ID",
                "operationId": "cf72b0674e86263c9f13097ae1198063",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the item to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Item data retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Item"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Item not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Item not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Server error: Something went wrong"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Items"
                ],
                "summary": "Update an existing item",
                "operationId": "5946ad0f76a90167421f69b2ba2a086a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the item to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Stetoskop"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Alat untuk mendengar detak jantung"
                                    },
                                    "stock": {
                                        "type": "integer",
                                        "example": 10
                                    },
                                    "kategori": {
                                        "type": "string",
                                        "example": "Monitoring"
                                    },
                                    "warehouse_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Item updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Item"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Item not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Item not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Server error: Something went wrong"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Items"
                ],
                "summary": "Delete an item by ID",
                "operationId": "264a2ea4d554347870bc1216f33f30a7",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Item ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Item deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Item deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Item not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Item not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Server error: Something went wrong"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/orders": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Get all orders",
                "operationId": "955bb77a45ae173a485fadb8befed93f",
                "responses": {
                    "200": {
                        "description": "List of orders retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Order"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to retrieve orders"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Orders"
                ],
                "summary": "Create a new order",
                "operationId": "2123ba58dadb22bd6f2c8081af562230",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "hospital_id",
                                    "items"
                                ],
                                "properties": {
                                    "hospital_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "items": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "item_id": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "quantity": {
                                                    "type": "integer",
                                                    "example": 5
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Order created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Stock not sufficient or validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Stok tidak mencukupi untuk item Monitor"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "hospital_id": [
                                                    "The hospital_id field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to create order"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/orders/{id}": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Get order details by ID",
                "operationId": "88d27387b1e409e075c18609d4a0c300",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Order ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Order not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to retrieve order"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Orders"
                ],
                "summary": "Update an existing order",
                "operationId": "38a1b85e8294795a1b0dc438a36e319f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the order to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "order_date": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2024-05-20 10:00:00"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "Diproses",
                                            "Dikirim",
                                            "Selesai"
                                        ],
                                        "example": "Dikirim"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Order updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Order not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "status": [
                                                    "The selected status is invalid."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to update order"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Error details"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Orders"
                ],
                "summary": "Delete an order by ID",
                "operationId": "bab875a1ed962fb33565ab9b48c0d494",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of order to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Order deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Order not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to delete order"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/orders/{id}/status": {
            "put": {
                "tags": [
                    "Orders"
                ],
                "summary": "Update status of an order",
                "operationId": "2b29ab889c21230523d142cbe158780e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of order to update status",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "status"
                                ],
                                "properties": {
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "Diproses",
                                            "Dikirim",
                                            "Selesai"
                                        ],
                                        "example": "Diproses"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Order status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "Dikirim"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Order not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to update order status"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/order-items": {
            "get": {
                "tags": [
                    "Order Items"
                ],
                "summary": "Get all order items",
                "operationId": "00ef4347ae4117974e08654982418127",
                "responses": {
                    "200": {
                        "description": "List of order items",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/OrderItem"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Order Items"
                ],
                "summary": "Create a new order item",
                "operationId": "ebd626997709bc1943529afd1010f1b2",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "order_id",
                                    "item_id",
                                    "quantity"
                                ],
                                "properties": {
                                    "order_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "item_id": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "quantity": {
                                        "type": "integer",
                                        "example": 5
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Order item created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderItem"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/order-items/{id}": {
            "get": {
                "tags": [
                    "Order Items"
                ],
                "summary": "Get order item detail by ID",
                "operationId": "2d064991b5a9733f6022f1ee79583b5a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Order Item ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order item detail",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderItem"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order item not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Order item not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Order Items"
                ],
                "summary": "Update an order item by ID",
                "operationId": "75cbe80759b818ea008f79628f18c87e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Order Item ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "order_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "item_id": {
                                        "type": "integer",
                                        "example": 5
                                    },
                                    "quantity": {
                                        "type": "integer",
                                        "example": 3
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Order item updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderItem"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order item not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Order item not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Order Items"
                ],
                "summary": "Delete an order item by ID",
                "operationId": "1278a6534795039ad2102b83915b6ead",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Order Item ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order item deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Order Item deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order item not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Order Item not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/warehouses": {
            "get": {
                "tags": [
                    "Warehouses"
                ],
                "summary": "Get all warehouses",
                "operationId": "0c48cbbd5731b5e56eda7c180576670b",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Warehouse"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Failed to fetch warehouses"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/warehouses/{id}": {
            "get": {
                "tags": [
                    "Warehouses"
                ],
                "summary": "Get a warehouse by ID",
                "operationId": "9f201c10112ab3904ca3aa4e71e63e89",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Warehouse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Warehouses"
                ],
                "summary": "Update a warehouse",
                "operationId": "8d7614858df133388092bda00a4be309",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "address": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Warehouse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Warehouses"
                ],
                "summary": "Delete a warehouse by ID",
                "operationId": "45d106d3e2367cdc02fc89c04fc702c1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Warehouse ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Warehouse deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Warehouse deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Warehouse not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Warehouse not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Hospital": {
                "title": "Hospital",
                "properties": {
                    "id": {
                        "description": "Auto-generated ID",
                        "type": "integer"
                    },
                    "name": {
                        "type": "string",
                        "example": "RS Harapan Sehat"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "admin@rsharapan.com"
                    },
                    "address": {
                        "type": "string",
                        "example": "Jl. Sehat No. 10"
                    },
                    "password": {
                        "type": "string",
                        "example": "rahasia123"
                    }
                },
                "type": "object"
            },
            "Item": {
                "title": "Item",
                "properties": {
                    "id": {
                        "description": "Auto-generated ID",
                        "type": "integer"
                    },
                    "name": {
                        "type": "string",
                        "example": "Monitor Tekanan Darah"
                    },
                    "description": {
                        "type": "string",
                        "example": "Alat untuk mengukur tekanan darah secara otomatis."
                    },
                    "stock": {
                        "type": "integer",
                        "example": 20
                    },
                    "kategori": {
                        "type": "string",
                        "enum": [
                            "AlatBantu",
                            "Furniture",
                            "Monitoring",
                            "Sterilisasi",
                            "Bedah",
                            "Laboratorium",
                            "ProteksiDiri",
                            "Lainnya"
                        ],
                        "example": "Monitoring"
                    },
                    "warehouse_id": {
                        "type": "integer",
                        "example": 5
                    }
                },
                "type": "object"
            },
            "Order": {
                "title": "Order",
                "properties": {
                    "id": {
                        "description": "Auto-generated ID",
                        "type": "integer"
                    },
                    "hospital_id": {
                        "description": "ID rumah sakit yang melakukan pemesanan",
                        "type": "integer",
                        "example": 2
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "Diproses",
                            "Dikirim",
                            "Selesai"
                        ],
                        "example": "Diproses"
                    },
                    "order_date": {
                        "description": "Tanggal pemesanan",
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-05-20T10:00:00Z"
                    }
                },
                "type": "object"
            },
            "OrderItem": {
                "title": "OrderItem",
                "properties": {
                    "id": {
                        "description": "Auto-generated ID",
                        "type": "integer"
                    },
                    "order_id": {
                        "description": "ID of the order",
                        "type": "integer",
                        "example": 1
                    },
                    "item_id": {
                        "description": "ID of the item",
                        "type": "integer",
                        "example": 1
                    },
                    "quantity": {
                        "description": "Quantity of item in the order",
                        "type": "integer",
                        "example": 5
                    }
                },
                "type": "object"
            },
            "Warehouse": {
                "title": "Warehouse",
                "properties": {
                    "id": {
                        "description": "Auto-generated ID",
                        "type": "integer"
                    },
                    "name": {
                        "type": "string",
                        "example": "Gudang Jogja"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "gudangjogja@gmail.com"
                    },
                    "address": {
                        "type": "string",
                        "example": "Jl. Persatuan No. 10"
                    },
                    "password": {
                        "type": "string",
                        "example": "rahasia123"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "sanctum": {
                "type": "http",
                "description": "Masukkan token Bearer",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Auth",
            "description": "Authentication process for hospitals and warehouses"
        },
        {
            "name": "Hospitals",
            "description": "Hospital account management"
        },
        {
            "name": "Items",
            "description": "Manage the list of available items"
        },
        {
            "name": "Orders",
            "description": "Manage order requests containing a collection of order items"
        },
        {
            "name": "Order Items",
            "description": "Handles specific items ordered by the hospital"
        },
        {
            "name": "Warehouses",
            "description": "Warehouse account management"
        }
    ]
}